{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/JavaScipt/REACT/1_/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport PostForm from './components/PostForm'; // import Counter from './components/Counter';\n// import ClassCounter from './components/ClassCounter';\n// import PostItem from './components/PostItem';\n\nimport PostList from './components/PostList'; // import MyButton from './components/UI/button/MyButton';\n// import MyInput from './components/UI/input/MyInput'\n\nimport './styles/app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [likes, setLikes] = useState(0);\n  // console.log(likes);\n  // console.log(setLikes);\n  // const [value, setValue] = useState('text in Input');\n  const [posts, setPosts] = useState([{\n    id: 1,\n    titel: 'Javascript 1',\n    body: 'описание поста 1'\n  }, {\n    id: 2,\n    titel: 'Javascript 2',\n    body: 'описание поста 2'\n  }, {\n    id: 3,\n    titel: 'Javascript 3',\n    body: 'описание поста 3'\n  }, {\n    id: 4,\n    titel: 'Javascript 4',\n    body: 'описание поста 4'\n  }]); // const [posts2, setPosts2] = useState([\n  //   { id: 1, titel: 'Javascript 5', body: 'описание поста 5' },\n  //   { id: 2, titel: 'Javascript 6', body: 'описание поста 6' },\n  //   { id: 3, titel: 'Javascript 7', body: 'описание поста 7' },\n  //   { id: 4, titel: 'Javascript 8', body: 'описание поста 8' }\n  // ]);\n  // const [titel, setTitel] = useState('');\n  // const [body, setBody] = useState('');\n  // const [post, setPost] = useState({ titel: '', body: '' });\n  // const addNewPost = (e) => {\n  //   e.preventDefault();\n  //   // console.log(titel);\n  //   // console.log(bodyInputRef.current.value); // получаем сам lom элемент\n  //   // const newPost = {\n  //   //   id: Date.now(),\n  //   //   titel,\n  //   //   body\n  //   // }\n  //   // console.log(newPost);\n  //   setPosts([...posts, { ...post, id: Date.now() }]);\n  //   // setTitel('');\n  //   // setBody('');\n  //   setPost({ titel: '', body: '' });\n  // }\n  // const bodyInputRef = useRef();\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: posts,\n      titel: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 titel 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 109\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fcStS1za55QLYW7UiMGQwUXbLjg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","PostForm","PostList","App","posts","setPosts","id","titel","body","createPost","newPost","removePost","post","filter","p","length"],"sources":["/Users/macbook/Documents/JavaScipt/REACT/1_/src/App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport PostForm from './components/PostForm';\n// import Counter from './components/Counter';\n// import ClassCounter from './components/ClassCounter';\n// import PostItem from './components/PostItem';\nimport PostList from './components/PostList';\n// import MyButton from './components/UI/button/MyButton';\n// import MyInput from './components/UI/input/MyInput'\n\nimport './styles/app.css';\n\nfunction App() {\n\n  // const [likes, setLikes] = useState(0);\n  // console.log(likes);\n  // console.log(setLikes);\n\n  // const [value, setValue] = useState('text in Input');\n  const [posts, setPosts] = useState([\n    { id: 1, titel: 'Javascript 1', body: 'описание поста 1' },\n    { id: 2, titel: 'Javascript 2', body: 'описание поста 2' },\n    { id: 3, titel: 'Javascript 3', body: 'описание поста 3' },\n    { id: 4, titel: 'Javascript 4', body: 'описание поста 4' }\n  ]);\n  // const [posts2, setPosts2] = useState([\n  //   { id: 1, titel: 'Javascript 5', body: 'описание поста 5' },\n  //   { id: 2, titel: 'Javascript 6', body: 'описание поста 6' },\n  //   { id: 3, titel: 'Javascript 7', body: 'описание поста 7' },\n  //   { id: 4, titel: 'Javascript 8', body: 'описание поста 8' }\n  // ]);\n\n\n  // const [titel, setTitel] = useState('');\n  // const [body, setBody] = useState('');\n\n  // const [post, setPost] = useState({ titel: '', body: '' });\n\n\n  // const addNewPost = (e) => {\n  //   e.preventDefault();\n  //   // console.log(titel);\n  //   // console.log(bodyInputRef.current.value); // получаем сам lom элемент\n  //   // const newPost = {\n  //   //   id: Date.now(),\n  //   //   titel,\n  //   //   body\n  //   // }\n  //   // console.log(newPost);\n  //   setPosts([...posts, { ...post, id: Date.now() }]);\n  //   // setTitel('');\n  //   // setBody('');\n  //   setPost({ titel: '', body: '' });\n\n  // }\n  // const bodyInputRef = useRef();\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n  }\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  }\n\n  return (\n    <div className=\"App\">\n\n      {/* <h1>{value}</h1>\n      <input type='text'\n        value={value}\n        onChange={event => setValue(event.target.value)}\n      ></input> */}\n\n      {/* <Counter />\n      <ClassCounter /> */}\n\n\n      {/* <PostItem post={{ id: 1, titel: 'Javascript', body: 'описание поста' }} /> */}\n      {/* <h1 style={{ textAlign: 'center' }}>\n        Список постов\n      </h1>\n\n      {posts.map((post) => <PostItem post={post} key={post.id} />)} */}\n\n      {/* <PostList posts={posts} titel='Список постов titel 1' /> */}\n\n      {/* <PostList posts={posts2} titel='Список постов titel 2' /> */}\n\n\n      {/* <form> */}\n      {/* управляемый компонент */}\n      {/* <MyInput value={post.titel} onChange={e => setTitel(e.target.value)} type='text' placeholder='название поста' /> */}\n      {/* <input ref={bodyInputRef} type='text' /> */}\n\n      {/* неуправляемый компонент */}\n      {/* <MyInput ref={bodyInputRef} type='text' placeholder='описание поста' /> */}\n\n      {/* <MyInput value={post.body} onChange={e => setBody(e.target.value)} type='text' placeholder='описание поста' /> */}\n\n      {/* <MyInput value={post.titel} onChange={e => setPost({ ...post, titel: e.target.value })} type='text' placeholder='название поста' /> */}\n      {/* <MyInput value={post.body} onChange={e => setPost({ ...post, body: e.target.value })} type='text' placeholder='описание поста' /> */}\n\n      {/* <MyButton onClick={addNewPost} >Создать пост</MyButton> */}\n      {/* </form> */}\n      <PostForm create={createPost} />\n      {\n        posts.length !== 0 ? <PostList remove={removePost} posts={posts} titel='Список постов titel 1' /> : <div></div>\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;AACA;;AAEA,OAAO,kBAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA;EACA;EAEA;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;IAAEM,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,cAAhB;IAAgCC,IAAI,EAAE;EAAtC,CADiC,EAEjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,cAAhB;IAAgCC,IAAI,EAAE;EAAtC,CAFiC,EAGjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,cAAhB;IAAgCC,IAAI,EAAE;EAAtC,CAHiC,EAIjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,cAAhB;IAAgCC,IAAI,EAAE;EAAtC,CAJiC,CAAD,CAAlC,CAPa,CAab;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EAEA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;IAC9BL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,OAAX,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,UAAU,GAAIC,IAAD,IAAU;IAC3BP,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASM,IAAI,CAACN,EAAhC,CAAD,CAAR;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBAuCE,QAAC,QAAD;MAAU,MAAM,EAAEG;IAAlB;MAAA;MAAA;MAAA;IAAA,QAvCF,EAyCIL,KAAK,CAACW,MAAN,KAAiB,CAAjB,gBAAqB,QAAC,QAAD;MAAU,MAAM,EAAEJ,UAAlB;MAA8B,KAAK,EAAEP,KAArC;MAA4C,KAAK,EAAC;IAAlD;MAAA;MAAA;MAAA;IAAA,QAArB,gBAAoG;MAAA;MAAA;MAAA;IAAA,QAzCxG;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+CD;;GApGQD,G;;KAAAA,G;AAsGT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}