{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/JavaScipt/REACT/1_/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport PostForm from './components/PostForm'; // import Counter from './components/Counter';\n// import ClassCounter from './components/ClassCounter';\n// import PostItem from './components/PostItem';\n\nimport PostList from './components/PostList';\nimport MySelect from './components/UI/select/MySelect'; // import MyButton from './components/UI/button/MyButton';\n\nimport MyInput from './components/UI/input/MyInput';\nimport './styles/app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [likes, setLikes] = useState(0);\n  // console.log(likes);\n  // console.log(setLikes);\n  // const [value, setValue] = useState('text in Input');\n  const [posts, setPosts] = useState([{\n    id: 1,\n    titel: 'Javascript 2',\n    body: 'описание поста 4'\n  }, {\n    id: 2,\n    titel: 'Javascript 1',\n    body: 'описание поста 2'\n  }, {\n    id: 3,\n    titel: 'Javascript 4',\n    body: 'описание поста 1'\n  }, {\n    id: 4,\n    titel: 'Javascript 3',\n    body: 'описание поста 3'\n  }]); // const [titel, setTitel] = useState('');\n  // const [body, setBody] = useState('');\n  // const [post, setPost] = useState({ titel: '', body: '' });\n  // const bodyInputRef = useRef();\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  function getSortedPosts() {\n    console.log('Sorted post runnin');\n    if (selectedSort) return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    return posts;\n  }\n\n  const [selectedSort, setSelectedSort] = useState('');\n  const sortPosts = useMemo(); //Поиск\n\n  const [searchQuary, setSearchQuary] = useState('');\n  const sortedPosts = getSortedPosts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n        value: searchQuary,\n        onChange: e => setSearchQuary(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedSort,\n        onChange: sortPosts,\n        defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n        options: [{\n          value: 'titel',\n          name: 'По названию'\n        }, {\n          value: 'body',\n          name: 'По описанию'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n        remove: removePost,\n        posts: sortedPosts,\n        titel: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 titel 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043D\\u0435\\u0431\\u044B\\u043B\\u0438 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0zMhbpagj1wG0JFzOOodCyeDtFw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useMemo","useState","PostForm","PostList","MySelect","MyInput","App","posts","setPosts","id","titel","body","createPost","newPost","removePost","post","filter","p","getSortedPosts","console","log","selectedSort","sort","a","b","localeCompare","setSelectedSort","sortPosts","searchQuary","setSearchQuary","sortedPosts","margin","e","target","value","name","length","textAlign"],"sources":["/Users/macbook/Documents/JavaScipt/REACT/1_/src/App.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport PostForm from './components/PostForm';\n// import Counter from './components/Counter';\n// import ClassCounter from './components/ClassCounter';\n// import PostItem from './components/PostItem';\nimport PostList from './components/PostList';\nimport MySelect from './components/UI/select/MySelect';\n// import MyButton from './components/UI/button/MyButton';\nimport MyInput from './components/UI/input/MyInput'\n\nimport './styles/app.css';\n\nfunction App() {\n\n  // const [likes, setLikes] = useState(0);\n  // console.log(likes);\n  // console.log(setLikes);\n\n  // const [value, setValue] = useState('text in Input');\n  const [posts, setPosts] = useState([\n    { id: 1, titel: 'Javascript 2', body: 'описание поста 4' },\n    { id: 2, titel: 'Javascript 1', body: 'описание поста 2' },\n    { id: 3, titel: 'Javascript 4', body: 'описание поста 1' },\n    { id: 4, titel: 'Javascript 3', body: 'описание поста 3' }\n  ]);\n\n  // const [titel, setTitel] = useState('');\n  // const [body, setBody] = useState('');\n\n  // const [post, setPost] = useState({ titel: '', body: '' });\n\n  // const bodyInputRef = useRef();\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n  }\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  }\n\n  function getSortedPosts() {\n    console.log('Sorted post runnin')\n    if (selectedSort)\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n\n    return posts;\n  }\n\n  const [selectedSort, setSelectedSort] = useState('');\n\n  const sortPosts = useMemo();\n\n  //Поиск\n\n  const [searchQuary, setSearchQuary] = useState('');\n  const sortedPosts = getSortedPosts();\n\n\n  return (\n    <div className=\"App\">\n\n      {/* <h1>{value}</h1>\n      <input type='text'\n        value={value}\n        onChange={event => setValue(event.target.value)}\n      ></input> */}\n\n      {/* <Counter />\n      <ClassCounter /> */}\n\n\n      {/* <PostItem post={{ id: 1, titel: 'Javascript', body: 'описание поста' }} /> */}\n      {/* <h1 style={{ textAlign: 'center' }}>\n        Список постов\n      </h1>\n\n      {posts.map((post) => <PostItem post={post} key={post.id} />)} */}\n\n      {/* <PostList posts={posts} titel='Список постов titel 1' /> */}\n\n      {/* <PostList posts={posts2} titel='Список постов titel 2' /> */}\n\n\n      {/* <form> */}\n      {/* управляемый компонент */}\n      {/* <MyInput value={post.titel} onChange={e => setTitel(e.target.value)} type='text' placeholder='название поста' /> */}\n      {/* <input ref={bodyInputRef} type='text' /> */}\n\n      {/* неуправляемый компонент */}\n      {/* <MyInput ref={bodyInputRef} type='text' placeholder='описание поста' /> */}\n\n      {/* <MyInput value={post.body} onChange={e => setBody(e.target.value)} type='text' placeholder='описание поста' /> */}\n\n      {/* <MyInput value={post.titel} onChange={e => setPost({ ...post, titel: e.target.value })} type='text' placeholder='название поста' /> */}\n      {/* <MyInput value={post.body} onChange={e => setPost({ ...post, body: e.target.value })} type='text' placeholder='описание поста' /> */}\n\n      {/* <MyButton onClick={addNewPost} >Создать пост</MyButton> */}\n      {/* </form> */}\n      <PostForm create={createPost} />\n      <hr style={{ margin: '15px 0' }} />\n      <div>\n        <MyInput placeholder='Поиск...'\n          value={searchQuary}\n          onChange={e => setSearchQuary(e.target.value)}\n        />\n        <MySelect\n          value={selectedSort}\n          onChange={sortPosts}\n          defaultValue=\"Сортировка\"\n          options={[{ value: 'titel', name: 'По названию' }, { value: 'body', name: 'По описанию' }]} />\n        {\n          posts.length !== 0 ?\n            <PostList remove={removePost} posts={sortedPosts} titel='Список постов titel 1' /> :\n            <div><h1 style={{ textAlign: 'center' }}>Посты небыли найдены!</h1></div>\n        }\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}